/*
 * GWMS Public API
 * GWMS（仓库管理系统）的官方公开API。 它为ERP、电子商务平台和TMS等外部系统提供了一个标准化、健壮且易于集成的接口，以便与WMS功能进行交互。  ## 认证机制  本API采用基于JWT的Bearer令牌认证，结合三重凭证验证机制：  1. **客户端凭证（Client Credentials）**：由系统管理员为上游系统生成的clientId和clientSecret 2. **API密钥（API Key）**：由仓库用户生成，关联到特定仓库和权限范围 3. **访问令牌（Access Token）**：通过认证端点获取的JWT令牌，用于API访问  ## 快速开始  1. **获取凭证**：联系系统管理员获取clientId和clientSecret，联系仓库用户获取apiKey 2. **获取令牌**：调用 `POST /auth-api/token` 端点获取访问令牌 3. **调用API**：在请求头中添加 `Authorization: Bearer {access_token}` 调用其他API  ## 认证头部格式  所有API请求（除了认证端点）必须包含以下HTTP头部：  ``` Authorization: Bearer {access_token} ```  其中`{access_token}`是从认证端点获取的JWT令牌。缺少此头部或令牌无效将导致401错误。  ## 权限范围  API访问权限基于以下范围进行控制：  | 权限范围 | 描述 | 适用API | 示例操作 | |---------|------|---------|---------| | `product:read` | 产品数据读取权限 | `/api/v1/products/_*` | 查询产品列表、获取产品详情 | | `product:write` | 产品数据写入权限 | `/api/v1/products/_*` | 创建产品、更新产品信息 | | `warehouse:read` | 仓库数据读取权限 | `/api/v1/warehouses/_*` | 查询仓库列表、获取仓库详情 | | `warehouse:write` | 仓库数据写入权限 | `/api/v1/warehouses/_*` | 创建仓库、更新仓库信息 | | `stock:read` | 库存数据读取权限 | `/api/v1/stock/_*` | 查询库存数量、库存明细 | | `stock:write` | 库存数据写入权限 | `/api/v1/stock/_*` | 库存调整、库存转移 | | `inbound:read` | 入库单读取权限 | `/api/v1/inbound/_*` | 查询入库单列表、获取入库单详情 | | `inbound:write` | 入库单写入权限 | `/api/v1/inbound/_*` | 创建入库单、更新入库单 | | `outbound:read` | 出库单读取权限 | `/api/v1/outbound/_*` | 查询出库单列表、获取出库单详情 | | `outbound:write` | 出库单写入权限 | `/api/v1/outbound/_*` | 创建出库单、更新出库单 | | `express:read` | 物流渠道读取权限 | `/api/v1/expressChannel/_*` | 查询物流渠道列表 | | `express:write` | 物流渠道写入权限 | `/api/v1/expressChannel/_*` | 创建物流渠道、更新物流渠道 |  ## 错误响应  认证失败时，API将返回以下错误响应：  - **401 Unauthorized**：令牌无效、过期或缺失 - **403 Forbidden**：令牌有效但权限不足 - **429 Too Many Requests**：超过访问频率限制  详细的错误响应格式请参考错误响应部分。 
 *
 * The version of the OpenAPI document: 1.0.3
 * Contact: api-support@jmalltech.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.jmalltech.gwms.sdk.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.jmalltech.gwms.sdk.invoker.JSON;

/**
 * 包装信息。
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Packaging implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_PACKAGE_LENGTH_CM = "packageLengthCm";
  @SerializedName(SERIALIZED_NAME_PACKAGE_LENGTH_CM)
  private Double packageLengthCm;

  public static final String SERIALIZED_NAME_PACKAGE_WIDTH_CM = "packageWidthCm";
  @SerializedName(SERIALIZED_NAME_PACKAGE_WIDTH_CM)
  private Double packageWidthCm;

  public static final String SERIALIZED_NAME_PACKAGE_HEIGHT_CM = "packageHeightCm";
  @SerializedName(SERIALIZED_NAME_PACKAGE_HEIGHT_CM)
  private Double packageHeightCm;

  public static final String SERIALIZED_NAME_PACKAGE_LENGTH_INCH = "packageLengthInch";
  @SerializedName(SERIALIZED_NAME_PACKAGE_LENGTH_INCH)
  private Double packageLengthInch;

  public static final String SERIALIZED_NAME_PACKAGE_WIDTH_INCH = "packageWidthInch";
  @SerializedName(SERIALIZED_NAME_PACKAGE_WIDTH_INCH)
  private Double packageWidthInch;

  public static final String SERIALIZED_NAME_PACKAGE_HEIGHT_INCH = "packageHeightInch";
  @SerializedName(SERIALIZED_NAME_PACKAGE_HEIGHT_INCH)
  private Double packageHeightInch;

  public static final String SERIALIZED_NAME_PACKAGE_WEIGHT_KG = "packageWeightKg";
  @SerializedName(SERIALIZED_NAME_PACKAGE_WEIGHT_KG)
  private Double packageWeightKg;

  public static final String SERIALIZED_NAME_PACKAGE_WEIGHT_LB = "packageWeightLb";
  @SerializedName(SERIALIZED_NAME_PACKAGE_WEIGHT_LB)
  private Double packageWeightLb;

  public static final String SERIALIZED_NAME_PACKAGE_METRIC_VOLUME = "packageMetricVolume";
  @SerializedName(SERIALIZED_NAME_PACKAGE_METRIC_VOLUME)
  private Double packageMetricVolume;

  public static final String SERIALIZED_NAME_PACKAGE_IMPERIAL_VOLUME = "packageImperialVolume";
  @SerializedName(SERIALIZED_NAME_PACKAGE_IMPERIAL_VOLUME)
  private Double packageImperialVolume;

  public Packaging() {
  }

  public Packaging packageLengthCm(Double packageLengthCm) {
    this.packageLengthCm = packageLengthCm;
    return this;
  }

   /**
   * 包材长度（厘米）。
   * minimum: 0.1
   * maximum: 10000
   * @return packageLengthCm
  **/
  @javax.annotation.Nullable
 @DecimalMin("0.1") @DecimalMax("10000")
  public Double getPackageLengthCm() {
    return packageLengthCm;
  }

  public void setPackageLengthCm(Double packageLengthCm) {
    this.packageLengthCm = packageLengthCm;
  }


  public Packaging packageWidthCm(Double packageWidthCm) {
    this.packageWidthCm = packageWidthCm;
    return this;
  }

   /**
   * 包材宽度（厘米）。
   * minimum: 0.1
   * maximum: 10000
   * @return packageWidthCm
  **/
  @javax.annotation.Nullable
 @DecimalMin("0.1") @DecimalMax("10000")
  public Double getPackageWidthCm() {
    return packageWidthCm;
  }

  public void setPackageWidthCm(Double packageWidthCm) {
    this.packageWidthCm = packageWidthCm;
  }


  public Packaging packageHeightCm(Double packageHeightCm) {
    this.packageHeightCm = packageHeightCm;
    return this;
  }

   /**
   * 包材高度（厘米）。
   * minimum: 0.1
   * maximum: 10000
   * @return packageHeightCm
  **/
  @javax.annotation.Nullable
 @DecimalMin("0.1") @DecimalMax("10000")
  public Double getPackageHeightCm() {
    return packageHeightCm;
  }

  public void setPackageHeightCm(Double packageHeightCm) {
    this.packageHeightCm = packageHeightCm;
  }


  public Packaging packageLengthInch(Double packageLengthInch) {
    this.packageLengthInch = packageLengthInch;
    return this;
  }

   /**
   * 包材长度（英寸）。
   * minimum: 0.1
   * maximum: 10000
   * @return packageLengthInch
  **/
  @javax.annotation.Nullable
 @DecimalMin("0.1") @DecimalMax("10000")
  public Double getPackageLengthInch() {
    return packageLengthInch;
  }

  public void setPackageLengthInch(Double packageLengthInch) {
    this.packageLengthInch = packageLengthInch;
  }


  public Packaging packageWidthInch(Double packageWidthInch) {
    this.packageWidthInch = packageWidthInch;
    return this;
  }

   /**
   * 包材宽度（英寸）。
   * minimum: 0.1
   * maximum: 10000
   * @return packageWidthInch
  **/
  @javax.annotation.Nullable
 @DecimalMin("0.1") @DecimalMax("10000")
  public Double getPackageWidthInch() {
    return packageWidthInch;
  }

  public void setPackageWidthInch(Double packageWidthInch) {
    this.packageWidthInch = packageWidthInch;
  }


  public Packaging packageHeightInch(Double packageHeightInch) {
    this.packageHeightInch = packageHeightInch;
    return this;
  }

   /**
   * 包材高度（英寸）。
   * minimum: 0.1
   * maximum: 10000
   * @return packageHeightInch
  **/
  @javax.annotation.Nullable
 @DecimalMin("0.1") @DecimalMax("10000")
  public Double getPackageHeightInch() {
    return packageHeightInch;
  }

  public void setPackageHeightInch(Double packageHeightInch) {
    this.packageHeightInch = packageHeightInch;
  }


  public Packaging packageWeightKg(Double packageWeightKg) {
    this.packageWeightKg = packageWeightKg;
    return this;
  }

   /**
   * 包材重量（千克）。
   * minimum: 0.01
   * maximum: 100000
   * @return packageWeightKg
  **/
  @javax.annotation.Nullable
 @DecimalMin("0.01") @DecimalMax("100000")
  public Double getPackageWeightKg() {
    return packageWeightKg;
  }

  public void setPackageWeightKg(Double packageWeightKg) {
    this.packageWeightKg = packageWeightKg;
  }


  public Packaging packageWeightLb(Double packageWeightLb) {
    this.packageWeightLb = packageWeightLb;
    return this;
  }

   /**
   * 包材重量（磅）。
   * minimum: 0.01
   * maximum: 100000
   * @return packageWeightLb
  **/
  @javax.annotation.Nullable
 @DecimalMin("0.01") @DecimalMax("100000")
  public Double getPackageWeightLb() {
    return packageWeightLb;
  }

  public void setPackageWeightLb(Double packageWeightLb) {
    this.packageWeightLb = packageWeightLb;
  }


  public Packaging packageMetricVolume(Double packageMetricVolume) {
    this.packageMetricVolume = packageMetricVolume;
    return this;
  }

   /**
   * 包装公制体积（立方厘米）。
   * minimum: 0.01
   * @return packageMetricVolume
  **/
  @javax.annotation.Nullable
 @DecimalMin("0.01")
  public Double getPackageMetricVolume() {
    return packageMetricVolume;
  }

  public void setPackageMetricVolume(Double packageMetricVolume) {
    this.packageMetricVolume = packageMetricVolume;
  }


  public Packaging packageImperialVolume(Double packageImperialVolume) {
    this.packageImperialVolume = packageImperialVolume;
    return this;
  }

   /**
   * 包装英制体积（立方英寸）。
   * minimum: 0.01
   * @return packageImperialVolume
  **/
  @javax.annotation.Nullable
 @DecimalMin("0.01")
  public Double getPackageImperialVolume() {
    return packageImperialVolume;
  }

  public void setPackageImperialVolume(Double packageImperialVolume) {
    this.packageImperialVolume = packageImperialVolume;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Packaging packaging = (Packaging) o;
    return Objects.equals(this.packageLengthCm, packaging.packageLengthCm) &&
        Objects.equals(this.packageWidthCm, packaging.packageWidthCm) &&
        Objects.equals(this.packageHeightCm, packaging.packageHeightCm) &&
        Objects.equals(this.packageLengthInch, packaging.packageLengthInch) &&
        Objects.equals(this.packageWidthInch, packaging.packageWidthInch) &&
        Objects.equals(this.packageHeightInch, packaging.packageHeightInch) &&
        Objects.equals(this.packageWeightKg, packaging.packageWeightKg) &&
        Objects.equals(this.packageWeightLb, packaging.packageWeightLb) &&
        Objects.equals(this.packageMetricVolume, packaging.packageMetricVolume) &&
        Objects.equals(this.packageImperialVolume, packaging.packageImperialVolume);
  }

  @Override
  public int hashCode() {
    return Objects.hash(packageLengthCm, packageWidthCm, packageHeightCm, packageLengthInch, packageWidthInch, packageHeightInch, packageWeightKg, packageWeightLb, packageMetricVolume, packageImperialVolume);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Packaging {\n");
    sb.append("    packageLengthCm: ").append(toIndentedString(packageLengthCm)).append("\n");
    sb.append("    packageWidthCm: ").append(toIndentedString(packageWidthCm)).append("\n");
    sb.append("    packageHeightCm: ").append(toIndentedString(packageHeightCm)).append("\n");
    sb.append("    packageLengthInch: ").append(toIndentedString(packageLengthInch)).append("\n");
    sb.append("    packageWidthInch: ").append(toIndentedString(packageWidthInch)).append("\n");
    sb.append("    packageHeightInch: ").append(toIndentedString(packageHeightInch)).append("\n");
    sb.append("    packageWeightKg: ").append(toIndentedString(packageWeightKg)).append("\n");
    sb.append("    packageWeightLb: ").append(toIndentedString(packageWeightLb)).append("\n");
    sb.append("    packageMetricVolume: ").append(toIndentedString(packageMetricVolume)).append("\n");
    sb.append("    packageImperialVolume: ").append(toIndentedString(packageImperialVolume)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("packageLengthCm");
    openapiFields.add("packageWidthCm");
    openapiFields.add("packageHeightCm");
    openapiFields.add("packageLengthInch");
    openapiFields.add("packageWidthInch");
    openapiFields.add("packageHeightInch");
    openapiFields.add("packageWeightKg");
    openapiFields.add("packageWeightLb");
    openapiFields.add("packageMetricVolume");
    openapiFields.add("packageImperialVolume");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to Packaging
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Packaging.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Packaging is not found in the empty JSON string", Packaging.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Packaging.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Packaging` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Packaging.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Packaging' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Packaging> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Packaging.class));

       return (TypeAdapter<T>) new TypeAdapter<Packaging>() {
           @Override
           public void write(JsonWriter out, Packaging value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Packaging read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Packaging given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Packaging
  * @throws IOException if the JSON string is invalid with respect to Packaging
  */
  public static Packaging fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Packaging.class);
  }

 /**
  * Convert an instance of Packaging to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

