/*
 * GWMS Public API
 * GWMS（仓库管理系统）的官方公开API。 它为ERP、电子商务平台和TMS等外部系统提供了一个标准化、健壮且易于集成的接口，以便与WMS功能进行交互。  ## 认证机制  本API采用基于JWT的Bearer令牌认证，结合三重凭证验证机制：  1. **客户端凭证（Client Credentials）**：由系统管理员为上游系统生成的clientId和clientSecret 2. **API密钥（API Key）**：由仓库用户生成，关联到特定仓库和权限范围 3. **访问令牌（Access Token）**：通过认证端点获取的JWT令牌，用于API访问  ## 快速开始  1. **获取凭证**：联系系统管理员获取clientId和clientSecret，联系仓库用户获取apiKey 2. **获取令牌**：调用 `POST /auth-api/token` 端点获取访问令牌 3. **调用API**：在请求头中添加 `Authorization: Bearer {access_token}` 调用其他API  ## 认证头部格式  所有API请求（除了认证端点）必须包含以下HTTP头部：  ``` Authorization: Bearer {access_token} ```  其中`{access_token}`是从认证端点获取的JWT令牌。缺少此头部或令牌无效将导致401错误。  ## 权限范围  API访问权限基于以下范围进行控制：  | 权限范围 | 描述 | 适用API | 示例操作 | |---------|------|---------|---------| | `product:read` | 产品数据读取权限 | `/api/v1/products/_*` | 查询产品列表、获取产品详情 | | `product:write` | 产品数据写入权限 | `/api/v1/products/_*` | 创建产品、更新产品信息 | | `warehouse:read` | 仓库数据读取权限 | `/api/v1/warehouses/_*` | 查询仓库列表、获取仓库详情 | | `warehouse:write` | 仓库数据写入权限 | `/api/v1/warehouses/_*` | 创建仓库、更新仓库信息 | | `stock:read` | 库存数据读取权限 | `/api/v1/stock/_*` | 查询库存数量、库存明细 | | `stock:write` | 库存数据写入权限 | `/api/v1/stock/_*` | 库存调整、库存转移 | | `inbound:read` | 入库单读取权限 | `/api/v1/inbound/_*` | 查询入库单列表、获取入库单详情 | | `inbound:write` | 入库单写入权限 | `/api/v1/inbound/_*` | 创建入库单、更新入库单 | | `outbound:read` | 出库单读取权限 | `/api/v1/outbound/_*` | 查询出库单列表、获取出库单详情 | | `outbound:write` | 出库单写入权限 | `/api/v1/outbound/_*` | 创建出库单、更新出库单 | | `express:read` | 物流渠道读取权限 | `/api/v1/expressChannel/_*` | 查询物流渠道列表 | | `express:write` | 物流渠道写入权限 | `/api/v1/expressChannel/_*` | 创建物流渠道、更新物流渠道 |  ## 错误响应  认证失败时，API将返回以下错误响应：  - **401 Unauthorized**：令牌无效、过期或缺失 - **403 Forbidden**：令牌有效但权限不足 - **429 Too Many Requests**：超过访问频率限制  详细的错误响应格式请参考错误响应部分。 
 *
 * The version of the OpenAPI document: 1.0.3
 * Contact: api-support@jmalltech.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.jmalltech.gwms.sdk.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.jmalltech.gwms.sdk.model.Charge;
import com.jmalltech.gwms.sdk.model.OutboundOrderDetail;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.jmalltech.gwms.sdk.invoker.JSON;

/**
 * OrderQueryVo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class OrderQueryVo implements Serializable {
  private static final long serialVersionUID = 1L;

  /**
   * 单据类型
   */
  @JsonAdapter(OrderTypeEnum.Adapter.class)
  public enum OrderTypeEnum {
    /**
     * 一件代发 - 直接从仓库发货到客户
     */
    DROP_SHIPPING("DROP_SHIPPING"),
    
    /**
     * FBA备货中转 - 发货到亚马逊FBA仓库
     */
    FBA("FBA");

    private String value;

    OrderTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static OrderTypeEnum fromValue(String value) {
      for (OrderTypeEnum b : OrderTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<OrderTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OrderTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public OrderTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return OrderTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      OrderTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_ORDER_TYPE = "orderType";
  @SerializedName(SERIALIZED_NAME_ORDER_TYPE)
  private OrderTypeEnum orderType;

  /**
   * 订单出库状态
   */
  @JsonAdapter(OrderStateEnum.Adapter.class)
  public enum OrderStateEnum {
    /**
     * 草稿/已取消 - 订单尚未开始处理或已被取消
     */
    DRAFT("DRAFT"),
    
    /**
     * 未出库 - 订单已创建但尚未完成出库
     */
    NOT_OUT("NOT_OUT"),
    
    /**
     * 已出库 - 订单已完成出库
     */
    OUTED("OUTED"),
    
    /**
     * 异常 - 订单处理过程中出现异常
     */
    ERROR("ERROR");

    private String value;

    OrderStateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static OrderStateEnum fromValue(String value) {
      for (OrderStateEnum b : OrderStateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<OrderStateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OrderStateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public OrderStateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return OrderStateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      OrderStateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_ORDER_STATE = "orderState";
  @SerializedName(SERIALIZED_NAME_ORDER_STATE)
  private OrderStateEnum orderState;

  public static final String SERIALIZED_NAME_ERROR_MSG = "errorMsg";
  @SerializedName(SERIALIZED_NAME_ERROR_MSG)
  private String errorMsg;

  public static final String SERIALIZED_NAME_TRACKING_NO = "trackingNo";
  @SerializedName(SERIALIZED_NAME_TRACKING_NO)
  private String trackingNo;

  public static final String SERIALIZED_NAME_CHARGES = "charges";
  @SerializedName(SERIALIZED_NAME_CHARGES)
  private List<@Valid Charge> charges;

  public static final String SERIALIZED_NAME_CUSTOMER_CODE = "customerCode";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_CODE)
  private String customerCode;

  public static final String SERIALIZED_NAME_EXPRESS_CHANNEL_CODE = "expressChannelCode";
  @SerializedName(SERIALIZED_NAME_EXPRESS_CHANNEL_CODE)
  private String expressChannelCode;

  public static final String SERIALIZED_NAME_PLATFORM_ORDER_NO = "platformOrderNo";
  @SerializedName(SERIALIZED_NAME_PLATFORM_ORDER_NO)
  private String platformOrderNo;

  public static final String SERIALIZED_NAME_WMS_ORDER_NO = "wmsOrderNo";
  @SerializedName(SERIALIZED_NAME_WMS_ORDER_NO)
  private String wmsOrderNo;

  public static final String SERIALIZED_NAME_WAREHOUSE_CODE = "warehouseCode";
  @SerializedName(SERIALIZED_NAME_WAREHOUSE_CODE)
  private String warehouseCode;

  public static final String SERIALIZED_NAME_TO_FULL_NAME = "toFullName";
  @SerializedName(SERIALIZED_NAME_TO_FULL_NAME)
  private String toFullName;

  public static final String SERIALIZED_NAME_TO_NUMBER = "toNumber";
  @SerializedName(SERIALIZED_NAME_TO_NUMBER)
  private String toNumber;

  public static final String SERIALIZED_NAME_TO_COUNTRY = "toCountry";
  @SerializedName(SERIALIZED_NAME_TO_COUNTRY)
  private String toCountry;

  public static final String SERIALIZED_NAME_TO_PROVINCE = "toProvince";
  @SerializedName(SERIALIZED_NAME_TO_PROVINCE)
  private String toProvince;

  public static final String SERIALIZED_NAME_TO_CITY = "toCity";
  @SerializedName(SERIALIZED_NAME_TO_CITY)
  private String toCity;

  public static final String SERIALIZED_NAME_TO_ADDRESS_LINE1 = "toAddressLine1";
  @SerializedName(SERIALIZED_NAME_TO_ADDRESS_LINE1)
  private String toAddressLine1;

  public static final String SERIALIZED_NAME_TO_ADDRESS_LINE2 = "toAddressLine2";
  @SerializedName(SERIALIZED_NAME_TO_ADDRESS_LINE2)
  private String toAddressLine2;

  public static final String SERIALIZED_NAME_TO_ZIP_CODE = "toZipCode";
  @SerializedName(SERIALIZED_NAME_TO_ZIP_CODE)
  private String toZipCode;

  public static final String SERIALIZED_NAME_DETAILS = "details";
  @SerializedName(SERIALIZED_NAME_DETAILS)
  private List<@Valid OutboundOrderDetail> details;

  public OrderQueryVo() {
  }

  public OrderQueryVo orderType(OrderTypeEnum orderType) {
    this.orderType = orderType;
    return this;
  }

   /**
   * 单据类型
   * @return orderType
  **/
  @javax.annotation.Nullable

  public OrderTypeEnum getOrderType() {
    return orderType;
  }

  public void setOrderType(OrderTypeEnum orderType) {
    this.orderType = orderType;
  }


  public OrderQueryVo orderState(OrderStateEnum orderState) {
    this.orderState = orderState;
    return this;
  }

   /**
   * 订单出库状态
   * @return orderState
  **/
  @javax.annotation.Nullable

  public OrderStateEnum getOrderState() {
    return orderState;
  }

  public void setOrderState(OrderStateEnum orderState) {
    this.orderState = orderState;
  }


  public OrderQueryVo errorMsg(String errorMsg) {
    this.errorMsg = errorMsg;
    return this;
  }

   /**
   * 异常信息
   * @return errorMsg
  **/
  @javax.annotation.Nullable

  public String getErrorMsg() {
    return errorMsg;
  }

  public void setErrorMsg(String errorMsg) {
    this.errorMsg = errorMsg;
  }


  public OrderQueryVo trackingNo(String trackingNo) {
    this.trackingNo = trackingNo;
    return this;
  }

   /**
   * 运单号
   * @return trackingNo
  **/
  @javax.annotation.Nullable

  public String getTrackingNo() {
    return trackingNo;
  }

  public void setTrackingNo(String trackingNo) {
    this.trackingNo = trackingNo;
  }


  public OrderQueryVo charges(List<@Valid Charge> charges) {
    this.charges = charges;
    return this;
  }

  public OrderQueryVo addChargesItem(Charge chargesItem) {
    if (this.charges == null) {
      this.charges = new ArrayList<>();
    }
    this.charges.add(chargesItem);
    return this;
  }

   /**
   * 计费项
   * @return charges
  **/
  @javax.annotation.Nullable
  @Valid

  public List<@Valid Charge> getCharges() {
    return charges;
  }

  public void setCharges(List<@Valid Charge> charges) {
    this.charges = charges;
  }


  public OrderQueryVo customerCode(String customerCode) {
    this.customerCode = customerCode;
    return this;
  }

   /**
   * 客户代码
   * @return customerCode
  **/
  @javax.annotation.Nullable

  public String getCustomerCode() {
    return customerCode;
  }

  public void setCustomerCode(String customerCode) {
    this.customerCode = customerCode;
  }


  public OrderQueryVo expressChannelCode(String expressChannelCode) {
    this.expressChannelCode = expressChannelCode;
    return this;
  }

   /**
   * 物流渠道
   * @return expressChannelCode
  **/
  @javax.annotation.Nullable

  public String getExpressChannelCode() {
    return expressChannelCode;
  }

  public void setExpressChannelCode(String expressChannelCode) {
    this.expressChannelCode = expressChannelCode;
  }


  public OrderQueryVo platformOrderNo(String platformOrderNo) {
    this.platformOrderNo = platformOrderNo;
    return this;
  }

   /**
   * 平台单号
   * @return platformOrderNo
  **/
  @javax.annotation.Nullable

  public String getPlatformOrderNo() {
    return platformOrderNo;
  }

  public void setPlatformOrderNo(String platformOrderNo) {
    this.platformOrderNo = platformOrderNo;
  }


  public OrderQueryVo wmsOrderNo(String wmsOrderNo) {
    this.wmsOrderNo = wmsOrderNo;
    return this;
  }

   /**
   * wms单号
   * @return wmsOrderNo
  **/
  @javax.annotation.Nullable

  public String getWmsOrderNo() {
    return wmsOrderNo;
  }

  public void setWmsOrderNo(String wmsOrderNo) {
    this.wmsOrderNo = wmsOrderNo;
  }


  public OrderQueryVo warehouseCode(String warehouseCode) {
    this.warehouseCode = warehouseCode;
    return this;
  }

   /**
   * 仓库代码
   * @return warehouseCode
  **/
  @javax.annotation.Nullable

  public String getWarehouseCode() {
    return warehouseCode;
  }

  public void setWarehouseCode(String warehouseCode) {
    this.warehouseCode = warehouseCode;
  }


  public OrderQueryVo toFullName(String toFullName) {
    this.toFullName = toFullName;
    return this;
  }

   /**
   * 收货人
   * @return toFullName
  **/
  @javax.annotation.Nullable

  public String getToFullName() {
    return toFullName;
  }

  public void setToFullName(String toFullName) {
    this.toFullName = toFullName;
  }


  public OrderQueryVo toNumber(String toNumber) {
    this.toNumber = toNumber;
    return this;
  }

   /**
   * 收货人联系号码
   * @return toNumber
  **/
  @javax.annotation.Nullable

  public String getToNumber() {
    return toNumber;
  }

  public void setToNumber(String toNumber) {
    this.toNumber = toNumber;
  }


  public OrderQueryVo toCountry(String toCountry) {
    this.toCountry = toCountry;
    return this;
  }

   /**
   * 收货国家
   * @return toCountry
  **/
  @javax.annotation.Nullable

  public String getToCountry() {
    return toCountry;
  }

  public void setToCountry(String toCountry) {
    this.toCountry = toCountry;
  }


  public OrderQueryVo toProvince(String toProvince) {
    this.toProvince = toProvince;
    return this;
  }

   /**
   * 收货省/州
   * @return toProvince
  **/
  @javax.annotation.Nullable

  public String getToProvince() {
    return toProvince;
  }

  public void setToProvince(String toProvince) {
    this.toProvince = toProvince;
  }


  public OrderQueryVo toCity(String toCity) {
    this.toCity = toCity;
    return this;
  }

   /**
   * 收货城市
   * @return toCity
  **/
  @javax.annotation.Nullable

  public String getToCity() {
    return toCity;
  }

  public void setToCity(String toCity) {
    this.toCity = toCity;
  }


  public OrderQueryVo toAddressLine1(String toAddressLine1) {
    this.toAddressLine1 = toAddressLine1;
    return this;
  }

   /**
   * 收货地址行1
   * @return toAddressLine1
  **/
  @javax.annotation.Nullable

  public String getToAddressLine1() {
    return toAddressLine1;
  }

  public void setToAddressLine1(String toAddressLine1) {
    this.toAddressLine1 = toAddressLine1;
  }


  public OrderQueryVo toAddressLine2(String toAddressLine2) {
    this.toAddressLine2 = toAddressLine2;
    return this;
  }

   /**
   * 收货地址行2
   * @return toAddressLine2
  **/
  @javax.annotation.Nullable

  public String getToAddressLine2() {
    return toAddressLine2;
  }

  public void setToAddressLine2(String toAddressLine2) {
    this.toAddressLine2 = toAddressLine2;
  }


  public OrderQueryVo toZipCode(String toZipCode) {
    this.toZipCode = toZipCode;
    return this;
  }

   /**
   * 收货邮编
   * @return toZipCode
  **/
  @javax.annotation.Nullable

  public String getToZipCode() {
    return toZipCode;
  }

  public void setToZipCode(String toZipCode) {
    this.toZipCode = toZipCode;
  }


  public OrderQueryVo details(List<@Valid OutboundOrderDetail> details) {
    this.details = details;
    return this;
  }

  public OrderQueryVo addDetailsItem(OutboundOrderDetail detailsItem) {
    if (this.details == null) {
      this.details = new ArrayList<>();
    }
    this.details.add(detailsItem);
    return this;
  }

   /**
   * Get details
   * @return details
  **/
  @javax.annotation.Nullable
  @Valid

  public List<@Valid OutboundOrderDetail> getDetails() {
    return details;
  }

  public void setDetails(List<@Valid OutboundOrderDetail> details) {
    this.details = details;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderQueryVo orderQueryVo = (OrderQueryVo) o;
    return Objects.equals(this.orderType, orderQueryVo.orderType) &&
        Objects.equals(this.orderState, orderQueryVo.orderState) &&
        Objects.equals(this.errorMsg, orderQueryVo.errorMsg) &&
        Objects.equals(this.trackingNo, orderQueryVo.trackingNo) &&
        Objects.equals(this.charges, orderQueryVo.charges) &&
        Objects.equals(this.customerCode, orderQueryVo.customerCode) &&
        Objects.equals(this.expressChannelCode, orderQueryVo.expressChannelCode) &&
        Objects.equals(this.platformOrderNo, orderQueryVo.platformOrderNo) &&
        Objects.equals(this.wmsOrderNo, orderQueryVo.wmsOrderNo) &&
        Objects.equals(this.warehouseCode, orderQueryVo.warehouseCode) &&
        Objects.equals(this.toFullName, orderQueryVo.toFullName) &&
        Objects.equals(this.toNumber, orderQueryVo.toNumber) &&
        Objects.equals(this.toCountry, orderQueryVo.toCountry) &&
        Objects.equals(this.toProvince, orderQueryVo.toProvince) &&
        Objects.equals(this.toCity, orderQueryVo.toCity) &&
        Objects.equals(this.toAddressLine1, orderQueryVo.toAddressLine1) &&
        Objects.equals(this.toAddressLine2, orderQueryVo.toAddressLine2) &&
        Objects.equals(this.toZipCode, orderQueryVo.toZipCode) &&
        Objects.equals(this.details, orderQueryVo.details);
  }

  @Override
  public int hashCode() {
    return Objects.hash(orderType, orderState, errorMsg, trackingNo, charges, customerCode, expressChannelCode, platformOrderNo, wmsOrderNo, warehouseCode, toFullName, toNumber, toCountry, toProvince, toCity, toAddressLine1, toAddressLine2, toZipCode, details);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderQueryVo {\n");
    sb.append("    orderType: ").append(toIndentedString(orderType)).append("\n");
    sb.append("    orderState: ").append(toIndentedString(orderState)).append("\n");
    sb.append("    errorMsg: ").append(toIndentedString(errorMsg)).append("\n");
    sb.append("    trackingNo: ").append(toIndentedString(trackingNo)).append("\n");
    sb.append("    charges: ").append(toIndentedString(charges)).append("\n");
    sb.append("    customerCode: ").append(toIndentedString(customerCode)).append("\n");
    sb.append("    expressChannelCode: ").append(toIndentedString(expressChannelCode)).append("\n");
    sb.append("    platformOrderNo: ").append(toIndentedString(platformOrderNo)).append("\n");
    sb.append("    wmsOrderNo: ").append(toIndentedString(wmsOrderNo)).append("\n");
    sb.append("    warehouseCode: ").append(toIndentedString(warehouseCode)).append("\n");
    sb.append("    toFullName: ").append(toIndentedString(toFullName)).append("\n");
    sb.append("    toNumber: ").append(toIndentedString(toNumber)).append("\n");
    sb.append("    toCountry: ").append(toIndentedString(toCountry)).append("\n");
    sb.append("    toProvince: ").append(toIndentedString(toProvince)).append("\n");
    sb.append("    toCity: ").append(toIndentedString(toCity)).append("\n");
    sb.append("    toAddressLine1: ").append(toIndentedString(toAddressLine1)).append("\n");
    sb.append("    toAddressLine2: ").append(toIndentedString(toAddressLine2)).append("\n");
    sb.append("    toZipCode: ").append(toIndentedString(toZipCode)).append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("orderType");
    openapiFields.add("orderState");
    openapiFields.add("errorMsg");
    openapiFields.add("trackingNo");
    openapiFields.add("charges");
    openapiFields.add("customerCode");
    openapiFields.add("expressChannelCode");
    openapiFields.add("platformOrderNo");
    openapiFields.add("wmsOrderNo");
    openapiFields.add("warehouseCode");
    openapiFields.add("toFullName");
    openapiFields.add("toNumber");
    openapiFields.add("toCountry");
    openapiFields.add("toProvince");
    openapiFields.add("toCity");
    openapiFields.add("toAddressLine1");
    openapiFields.add("toAddressLine2");
    openapiFields.add("toZipCode");
    openapiFields.add("details");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to OrderQueryVo
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OrderQueryVo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrderQueryVo is not found in the empty JSON string", OrderQueryVo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OrderQueryVo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OrderQueryVo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("orderType") != null && !jsonObj.get("orderType").isJsonNull()) && !jsonObj.get("orderType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orderType").toString()));
      }
      // validate the optional field `orderType`
      if (jsonObj.get("orderType") != null && !jsonObj.get("orderType").isJsonNull()) {
        OrderTypeEnum.validateJsonElement(jsonObj.get("orderType"));
      }
      if ((jsonObj.get("orderState") != null && !jsonObj.get("orderState").isJsonNull()) && !jsonObj.get("orderState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orderState").toString()));
      }
      // validate the optional field `orderState`
      if (jsonObj.get("orderState") != null && !jsonObj.get("orderState").isJsonNull()) {
        OrderStateEnum.validateJsonElement(jsonObj.get("orderState"));
      }
      if ((jsonObj.get("errorMsg") != null && !jsonObj.get("errorMsg").isJsonNull()) && !jsonObj.get("errorMsg").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `errorMsg` to be a primitive type in the JSON string but got `%s`", jsonObj.get("errorMsg").toString()));
      }
      if ((jsonObj.get("trackingNo") != null && !jsonObj.get("trackingNo").isJsonNull()) && !jsonObj.get("trackingNo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `trackingNo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("trackingNo").toString()));
      }
      if (jsonObj.get("charges") != null && !jsonObj.get("charges").isJsonNull()) {
        JsonArray jsonArraycharges = jsonObj.getAsJsonArray("charges");
        if (jsonArraycharges != null) {
          // ensure the json data is an array
          if (!jsonObj.get("charges").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `charges` to be an array in the JSON string but got `%s`", jsonObj.get("charges").toString()));
          }

          // validate the optional field `charges` (array)
          for (int i = 0; i < jsonArraycharges.size(); i++) {
            Charge.validateJsonElement(jsonArraycharges.get(i));
          };
        }
      }
      if ((jsonObj.get("customerCode") != null && !jsonObj.get("customerCode").isJsonNull()) && !jsonObj.get("customerCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerCode").toString()));
      }
      if ((jsonObj.get("expressChannelCode") != null && !jsonObj.get("expressChannelCode").isJsonNull()) && !jsonObj.get("expressChannelCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `expressChannelCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("expressChannelCode").toString()));
      }
      if ((jsonObj.get("platformOrderNo") != null && !jsonObj.get("platformOrderNo").isJsonNull()) && !jsonObj.get("platformOrderNo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `platformOrderNo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("platformOrderNo").toString()));
      }
      if ((jsonObj.get("wmsOrderNo") != null && !jsonObj.get("wmsOrderNo").isJsonNull()) && !jsonObj.get("wmsOrderNo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `wmsOrderNo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("wmsOrderNo").toString()));
      }
      if ((jsonObj.get("warehouseCode") != null && !jsonObj.get("warehouseCode").isJsonNull()) && !jsonObj.get("warehouseCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `warehouseCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("warehouseCode").toString()));
      }
      if ((jsonObj.get("toFullName") != null && !jsonObj.get("toFullName").isJsonNull()) && !jsonObj.get("toFullName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `toFullName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("toFullName").toString()));
      }
      if ((jsonObj.get("toNumber") != null && !jsonObj.get("toNumber").isJsonNull()) && !jsonObj.get("toNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `toNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("toNumber").toString()));
      }
      if ((jsonObj.get("toCountry") != null && !jsonObj.get("toCountry").isJsonNull()) && !jsonObj.get("toCountry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `toCountry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("toCountry").toString()));
      }
      if ((jsonObj.get("toProvince") != null && !jsonObj.get("toProvince").isJsonNull()) && !jsonObj.get("toProvince").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `toProvince` to be a primitive type in the JSON string but got `%s`", jsonObj.get("toProvince").toString()));
      }
      if ((jsonObj.get("toCity") != null && !jsonObj.get("toCity").isJsonNull()) && !jsonObj.get("toCity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `toCity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("toCity").toString()));
      }
      if ((jsonObj.get("toAddressLine1") != null && !jsonObj.get("toAddressLine1").isJsonNull()) && !jsonObj.get("toAddressLine1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `toAddressLine1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("toAddressLine1").toString()));
      }
      if ((jsonObj.get("toAddressLine2") != null && !jsonObj.get("toAddressLine2").isJsonNull()) && !jsonObj.get("toAddressLine2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `toAddressLine2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("toAddressLine2").toString()));
      }
      if ((jsonObj.get("toZipCode") != null && !jsonObj.get("toZipCode").isJsonNull()) && !jsonObj.get("toZipCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `toZipCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("toZipCode").toString()));
      }
      if (jsonObj.get("details") != null && !jsonObj.get("details").isJsonNull()) {
        JsonArray jsonArraydetails = jsonObj.getAsJsonArray("details");
        if (jsonArraydetails != null) {
          // ensure the json data is an array
          if (!jsonObj.get("details").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `details` to be an array in the JSON string but got `%s`", jsonObj.get("details").toString()));
          }

          // validate the optional field `details` (array)
          for (int i = 0; i < jsonArraydetails.size(); i++) {
            OutboundOrderDetail.validateJsonElement(jsonArraydetails.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrderQueryVo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrderQueryVo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrderQueryVo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrderQueryVo.class));

       return (TypeAdapter<T>) new TypeAdapter<OrderQueryVo>() {
           @Override
           public void write(JsonWriter out, OrderQueryVo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OrderQueryVo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of OrderQueryVo given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of OrderQueryVo
  * @throws IOException if the JSON string is invalid with respect to OrderQueryVo
  */
  public static OrderQueryVo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrderQueryVo.class);
  }

 /**
  * Convert an instance of OrderQueryVo to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

