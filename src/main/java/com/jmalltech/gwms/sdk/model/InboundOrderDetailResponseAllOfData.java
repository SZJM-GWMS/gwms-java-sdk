/*
 * GWMS Public API
 * GWMS（仓库管理系统）的官方公开API。 它为ERP、电子商务平台和TMS等外部系统提供了一个标准化、健壮且易于集成的接口，以便与WMS功能进行交互。  ## 认证机制  本API采用基于JWT的Bearer令牌认证，结合三重凭证验证机制：  1. **客户端凭证（Client Credentials）**：由系统管理员为上游系统生成的clientId和clientSecret 2. **API密钥（API Key）**：由仓库用户生成，关联到特定仓库和权限范围 3. **访问令牌（Access Token）**：通过认证端点获取的JWT令牌，用于API访问  ## 快速开始  1. **获取凭证**：联系系统管理员获取clientId和clientSecret，联系仓库用户获取apiKey 2. **获取令牌**：调用 `POST /auth-api/token` 端点获取访问令牌 3. **调用API**：在请求头中添加 `Authorization: Bearer {access_token}` 调用其他API  ## 认证头部格式  所有API请求（除了认证端点）必须包含以下HTTP头部：  ``` Authorization: Bearer {access_token} ```  其中`{access_token}`是从认证端点获取的JWT令牌。缺少此头部或令牌无效将导致401错误。  ## 权限范围  API访问权限基于以下范围进行控制：  | 权限范围 | 描述 | 适用API | 示例操作 | |---------|------|---------|---------| | `product:read` | 产品数据读取权限 | `/api/v1/products/_*` | 查询产品列表、获取产品详情 | | `product:write` | 产品数据写入权限 | `/api/v1/products/_*` | 创建产品、更新产品信息 | | `warehouse:read` | 仓库数据读取权限 | `/api/v1/warehouses/_*` | 查询仓库列表、获取仓库详情 | | `warehouse:write` | 仓库数据写入权限 | `/api/v1/warehouses/_*` | 创建仓库、更新仓库信息 | | `stock:read` | 库存数据读取权限 | `/api/v1/stock/_*` | 查询库存数量、库存明细 | | `stock:write` | 库存数据写入权限 | `/api/v1/stock/_*` | 库存调整、库存转移 | | `inbound:read` | 入库单读取权限 | `/api/v1/inbound/_*` | 查询入库单列表、获取入库单详情 | | `inbound:write` | 入库单写入权限 | `/api/v1/inbound/_*` | 创建入库单、更新入库单 | | `outbound:read` | 出库单读取权限 | `/api/v1/outbound/_*` | 查询出库单列表、获取出库单详情 | | `outbound:write` | 出库单写入权限 | `/api/v1/outbound/_*` | 创建出库单、更新出库单 | | `express:read` | 物流渠道读取权限 | `/api/v1/expressChannel/_*` | 查询物流渠道列表 | | `express:write` | 物流渠道写入权限 | `/api/v1/expressChannel/_*` | 创建物流渠道、更新物流渠道 |  ## 错误响应  认证失败时，API将返回以下错误响应：  - **401 Unauthorized**：令牌无效、过期或缺失 - **403 Forbidden**：令牌有效但权限不足 - **429 Too Many Requests**：超过访问频率限制  详细的错误响应格式请参考错误响应部分。 
 *
 * The version of the OpenAPI document: 1.0.3
 * Contact: api-support@jmalltech.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.jmalltech.gwms.sdk.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.jmalltech.gwms.sdk.model.ArrivalMethodEnum;
import com.jmalltech.gwms.sdk.model.InboundOrderBox;
import com.jmalltech.gwms.sdk.model.InboundOrderStatusEnum;
import com.jmalltech.gwms.sdk.model.InboundTypeEnum;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.jmalltech.gwms.sdk.invoker.JSON;

/**
 * InboundOrderDetailResponseAllOfData
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InboundOrderDetailResponseAllOfData implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_CREATE_BY = "createBy";
  @SerializedName(SERIALIZED_NAME_CREATE_BY)
  private Long createBy;

  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private OffsetDateTime createTime;

  public static final String SERIALIZED_NAME_UPDATE_BY = "updateBy";
  @SerializedName(SERIALIZED_NAME_UPDATE_BY)
  private Long updateBy;

  public static final String SERIALIZED_NAME_UPDATE_TIME = "updateTime";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  private OffsetDateTime updateTime;

  public static final String SERIALIZED_NAME_PARAMS = "params";
  @SerializedName(SERIALIZED_NAME_PARAMS)
  private Map<String, Object> params = new HashMap<>();

  public static final String SERIALIZED_NAME_INBOUND_NO = "inboundNo";
  @SerializedName(SERIALIZED_NAME_INBOUND_NO)
  private String inboundNo;

  public static final String SERIALIZED_NAME_INBOUND_TYPE = "inboundType";
  @SerializedName(SERIALIZED_NAME_INBOUND_TYPE)
  private InboundTypeEnum inboundType;

  public static final String SERIALIZED_NAME_ARRIVE_METHOD = "arriveMethod";
  @SerializedName(SERIALIZED_NAME_ARRIVE_METHOD)
  private ArrivalMethodEnum arriveMethod;

  public static final String SERIALIZED_NAME_ASN_ORDER_CODE = "asnOrderCode";
  @SerializedName(SERIALIZED_NAME_ASN_ORDER_CODE)
  private String asnOrderCode;

  public static final String SERIALIZED_NAME_OWNER_CODE = "ownerCode";
  @SerializedName(SERIALIZED_NAME_OWNER_CODE)
  private String ownerCode;

  public static final String SERIALIZED_NAME_OWNER_NAME = "ownerName";
  @SerializedName(SERIALIZED_NAME_OWNER_NAME)
  private String ownerName;

  public static final String SERIALIZED_NAME_WAREHOUSE_CODE = "warehouseCode";
  @SerializedName(SERIALIZED_NAME_WAREHOUSE_CODE)
  private String warehouseCode;

  public static final String SERIALIZED_NAME_WAREHOUSE_NAME = "warehouseName";
  @SerializedName(SERIALIZED_NAME_WAREHOUSE_NAME)
  private String warehouseName;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private InboundOrderStatusEnum status;

  /**
   * 运输方式
   */
  @JsonAdapter(TransportTypeEnum.Adapter.class)
  public enum TransportTypeEnum {
    /**
     * 航空运输 - 通过飞机进行的快速运输方式
     */
    AIR("AIR"),
    
    /**
     * 海运运输 - 通过船舶进行的大宗货物运输
     */
    SEA("SEA"),
    
    /**
     * 铁路运输 - 通过火车进行的陆地运输
     */
    RAIL("RAIL"),
    
    /**
     * 卡车运输 - 通过货车进行的公路运输
     */
    TRUCK("TRUCK"),
    
    /**
     * 快递运输 - 通过快递公司进行的小件运输
     */
    EXPRESS("EXPRESS"),
    
    /**
     * 其他运输 - 其他特殊运输方式
     */
    OTHER("OTHER");

    private String value;

    TransportTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TransportTypeEnum fromValue(String value) {
      for (TransportTypeEnum b : TransportTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TransportTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TransportTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TransportTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TransportTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      TransportTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_TRANSPORT_TYPE = "transportType";
  @SerializedName(SERIALIZED_NAME_TRANSPORT_TYPE)
  private TransportTypeEnum transportType;

  public static final String SERIALIZED_NAME_EXPECT_ARRIVE_TIME = "expectArriveTime";
  @SerializedName(SERIALIZED_NAME_EXPECT_ARRIVE_TIME)
  private OffsetDateTime expectArriveTime;

  public static final String SERIALIZED_NAME_TRACKING_NO = "trackingNo";
  @SerializedName(SERIALIZED_NAME_TRACKING_NO)
  private String trackingNo;

  public static final String SERIALIZED_NAME_CARRIER_CODE = "carrierCode";
  @SerializedName(SERIALIZED_NAME_CARRIER_CODE)
  private String carrierCode;

  public static final String SERIALIZED_NAME_ATTACHMENT_URLS = "attachmentUrls";
  @SerializedName(SERIALIZED_NAME_ATTACHMENT_URLS)
  private String attachmentUrls;

  public static final String SERIALIZED_NAME_TOTAL_BOX_RECEIVE = "totalBoxReceive";
  @SerializedName(SERIALIZED_NAME_TOTAL_BOX_RECEIVE)
  private Integer totalBoxReceive;

  public static final String SERIALIZED_NAME_TOTAL_SKU_RECEIVE = "totalSkuReceive";
  @SerializedName(SERIALIZED_NAME_TOTAL_SKU_RECEIVE)
  private Integer totalSkuReceive;

  public static final String SERIALIZED_NAME_TOTAL_BOX_ASN = "totalBoxAsn";
  @SerializedName(SERIALIZED_NAME_TOTAL_BOX_ASN)
  private Integer totalBoxAsn;

  public static final String SERIALIZED_NAME_TOTAL_SKU_ASN = "totalSkuAsn";
  @SerializedName(SERIALIZED_NAME_TOTAL_SKU_ASN)
  private Integer totalSkuAsn;

  public static final String SERIALIZED_NAME_LAST_RECEIVE_TIME = "lastReceiveTime";
  @SerializedName(SERIALIZED_NAME_LAST_RECEIVE_TIME)
  private OffsetDateTime lastReceiveTime;

  public static final String SERIALIZED_NAME_IS_METRIC = "isMetric";
  @SerializedName(SERIALIZED_NAME_IS_METRIC)
  private Boolean isMetric = true;

  public static final String SERIALIZED_NAME_REMARK = "remark";
  @SerializedName(SERIALIZED_NAME_REMARK)
  private String remark;

  public static final String SERIALIZED_NAME_BOXES = "boxes";
  @SerializedName(SERIALIZED_NAME_BOXES)
  private List<@Valid InboundOrderBox> boxes;

  public InboundOrderDetailResponseAllOfData() {
  }

  public InboundOrderDetailResponseAllOfData(
     String ownerName, 
     String warehouseName
  ) {
    this();
    this.ownerName = ownerName;
    this.warehouseName = warehouseName;
  }

  public InboundOrderDetailResponseAllOfData createBy(Long createBy) {
    this.createBy = createBy;
    return this;
  }

   /**
   * 创建者ID
   * @return createBy
  **/
  @javax.annotation.Nullable

  public Long getCreateBy() {
    return createBy;
  }

  public void setCreateBy(Long createBy) {
    this.createBy = createBy;
  }


  public InboundOrderDetailResponseAllOfData createTime(OffsetDateTime createTime) {
    this.createTime = createTime;
    return this;
  }

   /**
   * 创建时间
   * @return createTime
  **/
  @javax.annotation.Nullable
  @Valid

  public OffsetDateTime getCreateTime() {
    return createTime;
  }

  public void setCreateTime(OffsetDateTime createTime) {
    this.createTime = createTime;
  }


  public InboundOrderDetailResponseAllOfData updateBy(Long updateBy) {
    this.updateBy = updateBy;
    return this;
  }

   /**
   * 更新者ID
   * @return updateBy
  **/
  @javax.annotation.Nullable

  public Long getUpdateBy() {
    return updateBy;
  }

  public void setUpdateBy(Long updateBy) {
    this.updateBy = updateBy;
  }


  public InboundOrderDetailResponseAllOfData updateTime(OffsetDateTime updateTime) {
    this.updateTime = updateTime;
    return this;
  }

   /**
   * 更新时间
   * @return updateTime
  **/
  @javax.annotation.Nullable
  @Valid

  public OffsetDateTime getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(OffsetDateTime updateTime) {
    this.updateTime = updateTime;
  }


  public InboundOrderDetailResponseAllOfData params(Map<String, Object> params) {
    this.params = params;
    return this;
  }

  public InboundOrderDetailResponseAllOfData putParamsItem(String key, Object paramsItem) {
    if (this.params == null) {
      this.params = new HashMap<>();
    }
    this.params.put(key, paramsItem);
    return this;
  }

   /**
   * 扩展参数
   * @return params
  **/
  @javax.annotation.Nullable

  public Map<String, Object> getParams() {
    return params;
  }

  public void setParams(Map<String, Object> params) {
    this.params = params;
  }


  public InboundOrderDetailResponseAllOfData inboundNo(String inboundNo) {
    this.inboundNo = inboundNo;
    return this;
  }

   /**
   * 入库单号
   * @return inboundNo
  **/
  @javax.annotation.Nullable
 @Size(max=50)
  public String getInboundNo() {
    return inboundNo;
  }

  public void setInboundNo(String inboundNo) {
    this.inboundNo = inboundNo;
  }


  public InboundOrderDetailResponseAllOfData inboundType(InboundTypeEnum inboundType) {
    this.inboundType = inboundType;
    return this;
  }

   /**
   * Get inboundType
   * @return inboundType
  **/
  @javax.annotation.Nullable
  @Valid

  public InboundTypeEnum getInboundType() {
    return inboundType;
  }

  public void setInboundType(InboundTypeEnum inboundType) {
    this.inboundType = inboundType;
  }


  public InboundOrderDetailResponseAllOfData arriveMethod(ArrivalMethodEnum arriveMethod) {
    this.arriveMethod = arriveMethod;
    return this;
  }

   /**
   * Get arriveMethod
   * @return arriveMethod
  **/
  @javax.annotation.Nullable
  @Valid

  public ArrivalMethodEnum getArriveMethod() {
    return arriveMethod;
  }

  public void setArriveMethod(ArrivalMethodEnum arriveMethod) {
    this.arriveMethod = arriveMethod;
  }


  public InboundOrderDetailResponseAllOfData asnOrderCode(String asnOrderCode) {
    this.asnOrderCode = asnOrderCode;
    return this;
  }

   /**
   * 关联预报单编码
   * @return asnOrderCode
  **/
  @javax.annotation.Nullable
 @Pattern(regexp="^[A-Za-z0-9-]{1,50}$") @Size(max=50)
  public String getAsnOrderCode() {
    return asnOrderCode;
  }

  public void setAsnOrderCode(String asnOrderCode) {
    this.asnOrderCode = asnOrderCode;
  }


  public InboundOrderDetailResponseAllOfData ownerCode(String ownerCode) {
    this.ownerCode = ownerCode;
    return this;
  }

   /**
   * 货主编码
   * @return ownerCode
  **/
  @javax.annotation.Nullable
 @Pattern(regexp="^[A-Za-z0-9-]{1,50}$") @Size(max=50)
  public String getOwnerCode() {
    return ownerCode;
  }

  public void setOwnerCode(String ownerCode) {
    this.ownerCode = ownerCode;
  }


   /**
   * 货主名称
   * @return ownerName
  **/
  @javax.annotation.Nullable
 @Size(max=100)
  public String getOwnerName() {
    return ownerName;
  }



  public InboundOrderDetailResponseAllOfData warehouseCode(String warehouseCode) {
    this.warehouseCode = warehouseCode;
    return this;
  }

   /**
   * 仓库编码
   * @return warehouseCode
  **/
  @javax.annotation.Nullable
 @Pattern(regexp="^[A-Za-z0-9-]{1,50}$") @Size(max=50)
  public String getWarehouseCode() {
    return warehouseCode;
  }

  public void setWarehouseCode(String warehouseCode) {
    this.warehouseCode = warehouseCode;
  }


   /**
   * 仓库名称
   * @return warehouseName
  **/
  @javax.annotation.Nullable
 @Size(max=100)
  public String getWarehouseName() {
    return warehouseName;
  }



  public InboundOrderDetailResponseAllOfData status(InboundOrderStatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @Valid

  public InboundOrderStatusEnum getStatus() {
    return status;
  }

  public void setStatus(InboundOrderStatusEnum status) {
    this.status = status;
  }


  public InboundOrderDetailResponseAllOfData transportType(TransportTypeEnum transportType) {
    this.transportType = transportType;
    return this;
  }

   /**
   * 运输方式
   * @return transportType
  **/
  @javax.annotation.Nullable

  public TransportTypeEnum getTransportType() {
    return transportType;
  }

  public void setTransportType(TransportTypeEnum transportType) {
    this.transportType = transportType;
  }


  public InboundOrderDetailResponseAllOfData expectArriveTime(OffsetDateTime expectArriveTime) {
    this.expectArriveTime = expectArriveTime;
    return this;
  }

   /**
   * 预期送达时间
   * @return expectArriveTime
  **/
  @javax.annotation.Nullable
  @Valid

  public OffsetDateTime getExpectArriveTime() {
    return expectArriveTime;
  }

  public void setExpectArriveTime(OffsetDateTime expectArriveTime) {
    this.expectArriveTime = expectArriveTime;
  }


  public InboundOrderDetailResponseAllOfData trackingNo(String trackingNo) {
    this.trackingNo = trackingNo;
    return this;
  }

   /**
   * 跟踪号(快递单号/运单号)
   * @return trackingNo
  **/
  @javax.annotation.Nullable
 @Size(max=100)
  public String getTrackingNo() {
    return trackingNo;
  }

  public void setTrackingNo(String trackingNo) {
    this.trackingNo = trackingNo;
  }


  public InboundOrderDetailResponseAllOfData carrierCode(String carrierCode) {
    this.carrierCode = carrierCode;
    return this;
  }

   /**
   * 承运商编码
   * @return carrierCode
  **/
  @javax.annotation.Nullable
 @Pattern(regexp="^[A-Za-z0-9-]{1,50}$") @Size(max=50)
  public String getCarrierCode() {
    return carrierCode;
  }

  public void setCarrierCode(String carrierCode) {
    this.carrierCode = carrierCode;
  }


  public InboundOrderDetailResponseAllOfData attachmentUrls(String attachmentUrls) {
    this.attachmentUrls = attachmentUrls;
    return this;
  }

   /**
   * 附件地址(多个逗号分隔)
   * @return attachmentUrls
  **/
  @javax.annotation.Nullable
 @Size(max=2048)
  public String getAttachmentUrls() {
    return attachmentUrls;
  }

  public void setAttachmentUrls(String attachmentUrls) {
    this.attachmentUrls = attachmentUrls;
  }


  public InboundOrderDetailResponseAllOfData totalBoxReceive(Integer totalBoxReceive) {
    this.totalBoxReceive = totalBoxReceive;
    return this;
  }

   /**
   * 已接收箱子总数
   * minimum: 0
   * @return totalBoxReceive
  **/
  @javax.annotation.Nullable
 @Min(0)
  public Integer getTotalBoxReceive() {
    return totalBoxReceive;
  }

  public void setTotalBoxReceive(Integer totalBoxReceive) {
    this.totalBoxReceive = totalBoxReceive;
  }


  public InboundOrderDetailResponseAllOfData totalSkuReceive(Integer totalSkuReceive) {
    this.totalSkuReceive = totalSkuReceive;
    return this;
  }

   /**
   * 已接收SKU总数
   * minimum: 0
   * @return totalSkuReceive
  **/
  @javax.annotation.Nullable
 @Min(0)
  public Integer getTotalSkuReceive() {
    return totalSkuReceive;
  }

  public void setTotalSkuReceive(Integer totalSkuReceive) {
    this.totalSkuReceive = totalSkuReceive;
  }


  public InboundOrderDetailResponseAllOfData totalBoxAsn(Integer totalBoxAsn) {
    this.totalBoxAsn = totalBoxAsn;
    return this;
  }

   /**
   * 预报箱子总数
   * minimum: 0
   * @return totalBoxAsn
  **/
  @javax.annotation.Nullable
 @Min(0)
  public Integer getTotalBoxAsn() {
    return totalBoxAsn;
  }

  public void setTotalBoxAsn(Integer totalBoxAsn) {
    this.totalBoxAsn = totalBoxAsn;
  }


  public InboundOrderDetailResponseAllOfData totalSkuAsn(Integer totalSkuAsn) {
    this.totalSkuAsn = totalSkuAsn;
    return this;
  }

   /**
   * 预报SKU总数
   * minimum: 0
   * @return totalSkuAsn
  **/
  @javax.annotation.Nullable
 @Min(0)
  public Integer getTotalSkuAsn() {
    return totalSkuAsn;
  }

  public void setTotalSkuAsn(Integer totalSkuAsn) {
    this.totalSkuAsn = totalSkuAsn;
  }


  public InboundOrderDetailResponseAllOfData lastReceiveTime(OffsetDateTime lastReceiveTime) {
    this.lastReceiveTime = lastReceiveTime;
    return this;
  }

   /**
   * 最后接收时间
   * @return lastReceiveTime
  **/
  @javax.annotation.Nullable
  @Valid

  public OffsetDateTime getLastReceiveTime() {
    return lastReceiveTime;
  }

  public void setLastReceiveTime(OffsetDateTime lastReceiveTime) {
    this.lastReceiveTime = lastReceiveTime;
  }


  public InboundOrderDetailResponseAllOfData isMetric(Boolean isMetric) {
    this.isMetric = isMetric;
    return this;
  }

   /**
   * 是否使用公制单位
   * @return isMetric
  **/
  @javax.annotation.Nullable

  public Boolean getIsMetric() {
    return isMetric;
  }

  public void setIsMetric(Boolean isMetric) {
    this.isMetric = isMetric;
  }


  public InboundOrderDetailResponseAllOfData remark(String remark) {
    this.remark = remark;
    return this;
  }

   /**
   * 备注
   * @return remark
  **/
  @javax.annotation.Nullable
 @Size(max=500)
  public String getRemark() {
    return remark;
  }

  public void setRemark(String remark) {
    this.remark = remark;
  }


  public InboundOrderDetailResponseAllOfData boxes(List<@Valid InboundOrderBox> boxes) {
    this.boxes = boxes;
    return this;
  }

  public InboundOrderDetailResponseAllOfData addBoxesItem(InboundOrderBox boxesItem) {
    if (this.boxes == null) {
      this.boxes = new ArrayList<>();
    }
    this.boxes.add(boxesItem);
    return this;
  }

   /**
   * 入库单箱子列表，每个箱子包含其内部的明细信息
   * @return boxes
  **/
  @javax.annotation.Nullable
  @Valid

  public List<@Valid InboundOrderBox> getBoxes() {
    return boxes;
  }

  public void setBoxes(List<@Valid InboundOrderBox> boxes) {
    this.boxes = boxes;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InboundOrderDetailResponseAllOfData inboundOrderDetailResponseAllOfData = (InboundOrderDetailResponseAllOfData) o;
    return Objects.equals(this.createBy, inboundOrderDetailResponseAllOfData.createBy) &&
        Objects.equals(this.createTime, inboundOrderDetailResponseAllOfData.createTime) &&
        Objects.equals(this.updateBy, inboundOrderDetailResponseAllOfData.updateBy) &&
        Objects.equals(this.updateTime, inboundOrderDetailResponseAllOfData.updateTime) &&
        Objects.equals(this.params, inboundOrderDetailResponseAllOfData.params) &&
        Objects.equals(this.inboundNo, inboundOrderDetailResponseAllOfData.inboundNo) &&
        Objects.equals(this.inboundType, inboundOrderDetailResponseAllOfData.inboundType) &&
        Objects.equals(this.arriveMethod, inboundOrderDetailResponseAllOfData.arriveMethod) &&
        Objects.equals(this.asnOrderCode, inboundOrderDetailResponseAllOfData.asnOrderCode) &&
        Objects.equals(this.ownerCode, inboundOrderDetailResponseAllOfData.ownerCode) &&
        Objects.equals(this.ownerName, inboundOrderDetailResponseAllOfData.ownerName) &&
        Objects.equals(this.warehouseCode, inboundOrderDetailResponseAllOfData.warehouseCode) &&
        Objects.equals(this.warehouseName, inboundOrderDetailResponseAllOfData.warehouseName) &&
        Objects.equals(this.status, inboundOrderDetailResponseAllOfData.status) &&
        Objects.equals(this.transportType, inboundOrderDetailResponseAllOfData.transportType) &&
        Objects.equals(this.expectArriveTime, inboundOrderDetailResponseAllOfData.expectArriveTime) &&
        Objects.equals(this.trackingNo, inboundOrderDetailResponseAllOfData.trackingNo) &&
        Objects.equals(this.carrierCode, inboundOrderDetailResponseAllOfData.carrierCode) &&
        Objects.equals(this.attachmentUrls, inboundOrderDetailResponseAllOfData.attachmentUrls) &&
        Objects.equals(this.totalBoxReceive, inboundOrderDetailResponseAllOfData.totalBoxReceive) &&
        Objects.equals(this.totalSkuReceive, inboundOrderDetailResponseAllOfData.totalSkuReceive) &&
        Objects.equals(this.totalBoxAsn, inboundOrderDetailResponseAllOfData.totalBoxAsn) &&
        Objects.equals(this.totalSkuAsn, inboundOrderDetailResponseAllOfData.totalSkuAsn) &&
        Objects.equals(this.lastReceiveTime, inboundOrderDetailResponseAllOfData.lastReceiveTime) &&
        Objects.equals(this.isMetric, inboundOrderDetailResponseAllOfData.isMetric) &&
        Objects.equals(this.remark, inboundOrderDetailResponseAllOfData.remark) &&
        Objects.equals(this.boxes, inboundOrderDetailResponseAllOfData.boxes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createBy, createTime, updateBy, updateTime, params, inboundNo, inboundType, arriveMethod, asnOrderCode, ownerCode, ownerName, warehouseCode, warehouseName, status, transportType, expectArriveTime, trackingNo, carrierCode, attachmentUrls, totalBoxReceive, totalSkuReceive, totalBoxAsn, totalSkuAsn, lastReceiveTime, isMetric, remark, boxes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InboundOrderDetailResponseAllOfData {\n");
    sb.append("    createBy: ").append(toIndentedString(createBy)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    updateBy: ").append(toIndentedString(updateBy)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    params: ").append(toIndentedString(params)).append("\n");
    sb.append("    inboundNo: ").append(toIndentedString(inboundNo)).append("\n");
    sb.append("    inboundType: ").append(toIndentedString(inboundType)).append("\n");
    sb.append("    arriveMethod: ").append(toIndentedString(arriveMethod)).append("\n");
    sb.append("    asnOrderCode: ").append(toIndentedString(asnOrderCode)).append("\n");
    sb.append("    ownerCode: ").append(toIndentedString(ownerCode)).append("\n");
    sb.append("    ownerName: ").append(toIndentedString(ownerName)).append("\n");
    sb.append("    warehouseCode: ").append(toIndentedString(warehouseCode)).append("\n");
    sb.append("    warehouseName: ").append(toIndentedString(warehouseName)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    transportType: ").append(toIndentedString(transportType)).append("\n");
    sb.append("    expectArriveTime: ").append(toIndentedString(expectArriveTime)).append("\n");
    sb.append("    trackingNo: ").append(toIndentedString(trackingNo)).append("\n");
    sb.append("    carrierCode: ").append(toIndentedString(carrierCode)).append("\n");
    sb.append("    attachmentUrls: ").append(toIndentedString(attachmentUrls)).append("\n");
    sb.append("    totalBoxReceive: ").append(toIndentedString(totalBoxReceive)).append("\n");
    sb.append("    totalSkuReceive: ").append(toIndentedString(totalSkuReceive)).append("\n");
    sb.append("    totalBoxAsn: ").append(toIndentedString(totalBoxAsn)).append("\n");
    sb.append("    totalSkuAsn: ").append(toIndentedString(totalSkuAsn)).append("\n");
    sb.append("    lastReceiveTime: ").append(toIndentedString(lastReceiveTime)).append("\n");
    sb.append("    isMetric: ").append(toIndentedString(isMetric)).append("\n");
    sb.append("    remark: ").append(toIndentedString(remark)).append("\n");
    sb.append("    boxes: ").append(toIndentedString(boxes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("createBy");
    openapiFields.add("createTime");
    openapiFields.add("updateBy");
    openapiFields.add("updateTime");
    openapiFields.add("params");
    openapiFields.add("inboundNo");
    openapiFields.add("inboundType");
    openapiFields.add("arriveMethod");
    openapiFields.add("asnOrderCode");
    openapiFields.add("ownerCode");
    openapiFields.add("ownerName");
    openapiFields.add("warehouseCode");
    openapiFields.add("warehouseName");
    openapiFields.add("status");
    openapiFields.add("transportType");
    openapiFields.add("expectArriveTime");
    openapiFields.add("trackingNo");
    openapiFields.add("carrierCode");
    openapiFields.add("attachmentUrls");
    openapiFields.add("totalBoxReceive");
    openapiFields.add("totalSkuReceive");
    openapiFields.add("totalBoxAsn");
    openapiFields.add("totalSkuAsn");
    openapiFields.add("lastReceiveTime");
    openapiFields.add("isMetric");
    openapiFields.add("remark");
    openapiFields.add("boxes");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to InboundOrderDetailResponseAllOfData
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!InboundOrderDetailResponseAllOfData.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in InboundOrderDetailResponseAllOfData is not found in the empty JSON string", InboundOrderDetailResponseAllOfData.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!InboundOrderDetailResponseAllOfData.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `InboundOrderDetailResponseAllOfData` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("inboundNo") != null && !jsonObj.get("inboundNo").isJsonNull()) && !jsonObj.get("inboundNo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `inboundNo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("inboundNo").toString()));
      }
      // validate the optional field `inboundType`
      if (jsonObj.get("inboundType") != null && !jsonObj.get("inboundType").isJsonNull()) {
        InboundTypeEnum.validateJsonElement(jsonObj.get("inboundType"));
      }
      // validate the optional field `arriveMethod`
      if (jsonObj.get("arriveMethod") != null && !jsonObj.get("arriveMethod").isJsonNull()) {
        ArrivalMethodEnum.validateJsonElement(jsonObj.get("arriveMethod"));
      }
      if ((jsonObj.get("asnOrderCode") != null && !jsonObj.get("asnOrderCode").isJsonNull()) && !jsonObj.get("asnOrderCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `asnOrderCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("asnOrderCode").toString()));
      }
      if ((jsonObj.get("ownerCode") != null && !jsonObj.get("ownerCode").isJsonNull()) && !jsonObj.get("ownerCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ownerCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ownerCode").toString()));
      }
      if ((jsonObj.get("ownerName") != null && !jsonObj.get("ownerName").isJsonNull()) && !jsonObj.get("ownerName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ownerName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ownerName").toString()));
      }
      if ((jsonObj.get("warehouseCode") != null && !jsonObj.get("warehouseCode").isJsonNull()) && !jsonObj.get("warehouseCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `warehouseCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("warehouseCode").toString()));
      }
      if ((jsonObj.get("warehouseName") != null && !jsonObj.get("warehouseName").isJsonNull()) && !jsonObj.get("warehouseName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `warehouseName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("warehouseName").toString()));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        InboundOrderStatusEnum.validateJsonElement(jsonObj.get("status"));
      }
      if ((jsonObj.get("transportType") != null && !jsonObj.get("transportType").isJsonNull()) && !jsonObj.get("transportType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transportType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transportType").toString()));
      }
      // validate the optional field `transportType`
      if (jsonObj.get("transportType") != null && !jsonObj.get("transportType").isJsonNull()) {
        TransportTypeEnum.validateJsonElement(jsonObj.get("transportType"));
      }
      if ((jsonObj.get("trackingNo") != null && !jsonObj.get("trackingNo").isJsonNull()) && !jsonObj.get("trackingNo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `trackingNo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("trackingNo").toString()));
      }
      if ((jsonObj.get("carrierCode") != null && !jsonObj.get("carrierCode").isJsonNull()) && !jsonObj.get("carrierCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `carrierCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("carrierCode").toString()));
      }
      if ((jsonObj.get("attachmentUrls") != null && !jsonObj.get("attachmentUrls").isJsonNull()) && !jsonObj.get("attachmentUrls").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `attachmentUrls` to be a primitive type in the JSON string but got `%s`", jsonObj.get("attachmentUrls").toString()));
      }
      if ((jsonObj.get("remark") != null && !jsonObj.get("remark").isJsonNull()) && !jsonObj.get("remark").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `remark` to be a primitive type in the JSON string but got `%s`", jsonObj.get("remark").toString()));
      }
      if (jsonObj.get("boxes") != null && !jsonObj.get("boxes").isJsonNull()) {
        JsonArray jsonArrayboxes = jsonObj.getAsJsonArray("boxes");
        if (jsonArrayboxes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("boxes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `boxes` to be an array in the JSON string but got `%s`", jsonObj.get("boxes").toString()));
          }

          // validate the optional field `boxes` (array)
          for (int i = 0; i < jsonArrayboxes.size(); i++) {
            InboundOrderBox.validateJsonElement(jsonArrayboxes.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!InboundOrderDetailResponseAllOfData.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'InboundOrderDetailResponseAllOfData' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<InboundOrderDetailResponseAllOfData> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(InboundOrderDetailResponseAllOfData.class));

       return (TypeAdapter<T>) new TypeAdapter<InboundOrderDetailResponseAllOfData>() {
           @Override
           public void write(JsonWriter out, InboundOrderDetailResponseAllOfData value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public InboundOrderDetailResponseAllOfData read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of InboundOrderDetailResponseAllOfData given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of InboundOrderDetailResponseAllOfData
  * @throws IOException if the JSON string is invalid with respect to InboundOrderDetailResponseAllOfData
  */
  public static InboundOrderDetailResponseAllOfData fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, InboundOrderDetailResponseAllOfData.class);
  }

 /**
  * Convert an instance of InboundOrderDetailResponseAllOfData to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

